# Adapted from https://github.com/jimhester/azuretest

trigger:
- master

pool:
  vmImage: 'ubuntu-16.04'

container:
  #image: 'rocker/r-ver:3.6.1'
  image: 'rstudio/r-base:3.6.1-xenial'

variables:
  AZURE_BUILD_NUMBER: '$(Build.BuildNumber)'
  R_LIBS_USER: '$(Agent.BuildDirectory)/R/library'
  SOURCE_DIR: '$(Build.SourcesDirectory)'

steps:
- script: |
    echo "Creating directory for R packages ==> ${R_LIBS_USER}"
    mkdir -p "${R_LIBS_USER}"
    echo "Updating ~/.Rprofile"
    echo "options(repos = 'https://cloud.r-project.org')" > ~/.Rprofile
    # echo ".libPaths('${R_LIBS_USER}')" >> ~/.Rprofile
    echo "The content of ~/.Rprofile is now ==>"
    sed -e 's/^/>> /' ~/.Rprofile
  displayName: 'Setup R'
#- script: |
    #sudo apt-get update && sudo apt-get install &&
- script: |
    echo "Installing packrat"
    R -e "install.packages(c('packrat'))"
  displayName: 'Install packrat'
#- task: CacheBeta@0
#  inputs:
#    key: |
#      packrat
#      $(Agent.OS)
#      $(Build.SourcesDirectory)/packrat/packrat.lock
#    path: $(Build.SourcesDirectory)/packrat/lib
#    #cacheHitVar: CACHE_RESTORED
#  displayName: 'Caching packages'
- script: |
    echo "Restoring packrat packages"
    Rscript -e "packrat::restore()"
    echo "Listing packrat"
    ls -la ${SOURCE_DIR}/packrat
    echo "Listing packrat/src"
    ls -la ${SOURCE_DIR}/packrat/src
    echo "Listing packrat/lib"
    ls -la ${SOURCE_DIR}/packrat/lib
#  condition: ne(variables.CACHE_RESTORED, 'true')
  displayName: 'Restore packages'
#- script: |
    #cd "${SOURCE_DIR}"
    #    Rscript -e ".Library"
    #    Rscript -e "installed.packages()"
    #Rscript -e "blogdown::build_site(local = FALSE, method = c('html', 'custom'), run_hugo = FALSE)"
  #displayName: 'Build site'
#- script: |
#    echo "Setting up git user.name and user.email"
#    git config --global user.name "Curtis Alexander"
#    git config --global user.email "calex@calex.org"
#    echo "fetch, checkout, and commit to publish branch"
#    git fetch
#    git checkout -b publish
#    git add .
#    git commit --message "Azure Pipelines build: ${AZURE_BUILD_NUMBER}"
#    echo "Push to remote"
#    git remote add origin-publish https://${GITHUB_PAT}@github.com/curtisalexander/calex.git > /dev/null 2>&1
#    git push -f --quiet --set-upstream origin-publish publish
#  displayName: 'Push to publish branch'